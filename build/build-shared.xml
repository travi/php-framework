<?xml version="1.0" encoding="utf-8"?>
<project>
    <property file="${shared.dir}/shared.properties" />
    <exec executable="hostname" outputproperty="computer.hostname"/>

    <condition property="not.on.teamcity">
        <not>
            <contains string="${computer.hostname}" substring="teamcity"/>
        </not>
    </condition>

    <condition property="simpletest.report.format" value="-junit">
        <contains string="${computer.hostname}" substring="teamcity"/>
    </condition>


    <path id="js.lint.classpath">
        <fileset dir="${ant.lib}">
            <include name="${jslint4java.jar}"/>
        </fileset>
    </path>
    <taskdef name="jslint" classname="com.googlecode.jslint4java.ant.JSLintTask">
        <classpath>
            <path refid="js.lint.classpath"/>
        </classpath>
    </taskdef>

    <path id="yuicompressor.classpath">
        <fileset dir="${ant.lib}">
            <include name="${yuicompressor.jar}"/>
            <include name="${yuiant.jar}"/>
        </fileset>
    </path>
    <taskdef name="yuicompress" classname="com.yahoo.platform.yui.compressor.YUICompressTask">
        <classpath>
            <path refid="yuicompressor.classpath"/>
        </classpath>
    </taskdef>

    <taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy" classpath="${groovy.classpath}"/>

    <!--This is defined to be an empty fileset to keep jsLint from breaking
        when a project does not define any overrides-->
    <fileset id="js.exclude.overrides" dir=".">
        <include/>
    </fileset>

    <target name="gates">
        <antcall target="checkstyle"/>
        <antcall target="test"/>
        <antcall target="messDetect"/>
    </target>

    <target name="checkstyle">
        <antcall target="jsLint" />
        <antcall target="phpcs"/>
    </target>

    <target name="test">
        <antcall target="phpUnit"/>
    </target>

    <target name="messDetect" description="Mess Detection">
        <antcall target="phpcpd"/>
    </target>

    <target name="phpUnit" description="PHPUnit Test Runner">
        <mkdir dir="${build.logs}"/>
        <exec dir="${tests.dir}" executable="phpunit" failonerror="true">
            <arg line=" --log-junit         ${build.logs}/phpunit.xml
                        --coverage-clover   ${build.logs}/clover.xml
                        --coverage-html     ${build.dir}/coverage
                        php" />
        </exec>
    </target>

    <target name="jsLint">
        <mkdir dir="${build.logs}"/>
        <jslint options="${jslint.goodparts}" haltonfailure="false" failureProperty="jsLintResult">
            <predef>${jslint.predef}</predef>
            <formatter type="plain" />
            <formatter type="checkstyle" destfile="${build.logs}/jslint.xml" />
            <fileset refid="js.files"/>
            <fileset refid="js.tests"/>
            <fileset refid="js.exclude.overrides"/>
        </jslint>
        <fail if="jsLintResult" message="There were JSLint failures"/>
    </target>

    <target name="phpcs" description="PHP Code Sniffer">
        <mkdir dir="${build.logs}"/>
        <exec executable="phpcs">
            <arg line="--version"/>
        </exec>
        <exec dir="${src.dir}"
              executable="phpcs"
              output="${build.logs}/checkstyle.xml"
              failonerror="true">
            <arg line="--standard=${shared.dir}/codingStandard.xml"/>
            <arg line="--report=checkstyle ."/>
        </exec>
    </target>

    <target name="phpcpd" description="PHP Copy/Paste Detector">
        <exec dir="${src.dir}"
              executable="phpcpd"
              failonerror="true">
            <arg line="--log-pmd ${build.logs}/pmd-cpd.xml ."/>
        </exec>
    </target>

    <target name="sshFromMac">
        <property name="keyfile" value="${mac.keyfile}"/>
        <property file="/Users/travi/properties.properties"/>
    </target>

    <target name="deploy" depends="dist">
        <scp
            file="${dist.dir}/site.zip"
            todir="${server.username}@${server.host}:${server.path}"
            trust="yes"
            sftp="true"
            preserveLastmodified="true"
            keyfile="${keyfile}"
            passphrase="${passphrase}"
        />
        <sshexec
            host="${server.host}"
            username="${server.username}"
            keyfile="${keyfile}"
            passphrase="${passphrase}"
            trust="true"
            commandResource="deploy.txt"
        />
    </target>

    <target name="dist" depends="build">
        <antcall target="minify"/>
        <antcall target="dist.zip"/>
    </target>

    <target name="build" depends="clean,createBuildDirs">
        <copy todir="${building.dir}" preservelastmodified="true">
            <fileset dir="${site.dir}">
                <exclude name="build/**"/>
                <exclude name="test/**"/>
            </fileset>
        </copy>
    </target>

    <target name="createBuildDirs">
        <mkdir dir="${building.dir}"/>
    </target>

    <target name="createDistDirs">
        <mkdir dir="${dist.dir}"/>
    </target>

    <target name="dist.zip">
        <zip
            destfile="${dist.dir}/site.zip"
            basedir="${building.dir}"
            update="true"
        />
    </target>

    <target name="clean">
        <delete dir="${build.logs}"/>
        <delete dir="${build.dir}/coverage"/>
        <delete dir="${build.dir}/site"/>
        <delete dir="${build.dir}/dist"/>
    </target>
</project>
