(function (fwork) {
    "use strict";

    var choiceListId = "versions",
        enhancementVersionConstants = fwork.constants();

    module("Choose Version", {
        setup: function () {
            Modernizr.init();
            Modernizr.expect('mq', {returnValue: true});
        },
        teardown: function () {
            fwork.cookies.clearAll();
        }
    });

    test("Mobile Choice defined as external code expects", function () {
        strictEqual(enhancementVersionConstants.MOBILE_CHOICE, 'mobile');
    });

    test("Desktop Choice defined as external code expects", function () {
        strictEqual(enhancementVersionConstants.DESKTOP_CHOICE, 'desktop');
    });

    test("Basic Choice defined as external code expects", function () {
        strictEqual(enhancementVersionConstants.BASIC_CHOICE, 'basic');
    });

    test("Links added to page", function () {
        fwork.init();

        var choiceGroupId = 'enhancementVersion',
            choicesExplainationId = 'explainChooseVersion',
            $enhancementChoices = $('#' + choiceListId + ' li');

        strictEqual($('#' + choicesExplainationId).text(), "Switch to version");
        strictEqual($('footer ul').length, 1);

        strictEqual($('footer ul').attr('id'), choiceListId);
        strictEqual($enhancementChoices.length, 2);
        strictEqual($enhancementChoices.eq(0).text(), enhancementVersionConstants.BASIC_CHOICE);

        strictEqual($enhancementChoices.eq(0).attr('id'), enhancementVersionConstants.BASIC_CHOICE + 'Version');
        strictEqual($('#' + choiceListId).parent().attr('id'), choiceGroupId);
        strictEqual($('#' + choicesExplainationId).parent().attr('id'), choiceGroupId);
    });

    test("Mobile link shown when desktop version active", function () {
        Modernizr.expect('mq', {returnValue: false});

        fwork.init();

        var $enhancementChoices = $('#' + choiceListId + ' li');

        strictEqual($enhancementChoices.eq(1).text(), enhancementVersionConstants.MOBILE_CHOICE);
        strictEqual($enhancementChoices.eq(1).attr('id'), enhancementVersionConstants.MOBILE_CHOICE + 'Version');
    });

    test("Desktop link shown when mobile version active", function () {
        Modernizr.expect('mq', {returnValue: true});

        fwork.init();

        var $enhancementChoices = $('#' + choiceListId + ' li');

        strictEqual($enhancementChoices.eq(1).text(), enhancementVersionConstants.DESKTOP_CHOICE);
        strictEqual($enhancementChoices.eq(1).attr('id'), enhancementVersionConstants.DESKTOP_CHOICE + 'Version');
    });

    test("Switch to Desktop version", function () {
        Modernizr.init();
        Modernizr.expect('mq', {returnValue: true});
        fwork.location.init();
        fwork.location.expect('refresh', {timesExpected: 2});

        fwork.init();

        $('#desktopVersion').click();

        strictEqual(fwork.cookies.value(
            enhancementVersionConstants.ENHANCEMENT_VERSION_KEY),
            enhancementVersionConstants.DESKTOP_ENHANCEMENT_VERSION
        );
        ok(fwork.location.verify(), "reloads to get proper resources");
    });

    test("Switch to Mobile version", function () {
        Modernizr.init();
        Modernizr.expect('mq', {returnValue: false});
        fwork.location.init();
        fwork.location.expect('refresh', {timesExpected: 2});

        fwork.init();

        $('#mobileVersion').click();

        strictEqual(fwork.cookies.value(
            enhancementVersionConstants.ENHANCEMENT_VERSION_KEY),
            enhancementVersionConstants.MOBILE_ENHANCEMENT_VERSION
        );
        ok(fwork.location.verify(), "reloads to get proper resources");
    });
}(travi.framework));
